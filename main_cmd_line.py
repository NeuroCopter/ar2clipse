if __name__ == "__main__":
    """
    parsed cmd-line args and converts the specified project.
    """

    import argparse
    import ardupilot_2_eclipse
    
    parser = argparse.ArgumentParser()
    
    parser.add_argument("eclipse_workspace", metavar = "workspace", help = "path of eclipse workspace")
    parser.add_argument("eclipse_project",   metavar = "project",   help = "name of destination project in eclipse workspace")
    parser.add_argument("ardupilot_path",    metavar = "ardupilot", help = "path of ardupilot directory that contains the sketches")
    parser.add_argument("ardupilot_project", metavar = "sketch",    help = "ardupilot sketch / project to be used e.g. \"ArduCopter\"")
    
    parser.add_argument("-t", "--tmp", metavar = "DIR", default = "/tmp", help = "tmp dir that's used by the ardupilot makefile")
    parser.add_argument("-a", "--arg", metavar = "ARG", action = "append", required = True, help = "argument passed to the ardupilot makefile e.g.\"apm2-quad\"")
    parser.add_argument("-c", "--cfg", metavar = "CFG", default = "Release", help = "eclipse configuration (e.g. \"Release\", \"Debug\")")
    
    g_link = parser.add_mutually_exclusive_group()
    g_link.add_argument("--no-link", action = "store_false", dest = "link", help = "copy ardupilot files into eclipse project")
    g_link.add_argument("--link",    action = "store_true",  dest = "link", help = "(default) symlink ardupilot files into eclipse project")
    
    g_pde = parser.add_mutually_exclusive_group()
    g_pde.add_argument("--dont-include-pde", action = "store_true",  dest = "dont_include_pde", help = "use \"main cpp\" generated by ardupilot makefile (pde code pasted)")
    g_pde.add_argument("--include-pde",      action = "store_false", dest = "dont_include_pde", help = "(default) generate \"main cpp\" that includes pde files")
    
    parser.add_argument("--dont-ask", action = "store_false", dest = "ask", help = "don't get confirmation for copying/deleting/linking files")
    
    args = parser.parse_args()


    a = ardupilot_2_eclipse.ardupilot_eclipse(args.eclipse_workspace,
                                              args.eclipse_project,
                                              args.ardupilot_path,
                                              args.ardupilot_project,
                                              args.tmp,
                                              args.arg
                                              )

    a.copy_ardupilot_to_eclipse(link = args.link,
                                dont_include_pde = args.dont_include_pde,
                                ask = args.ask
                                )
    
    a.set_includes(args.cfg)
    a.set_excludes(args.cfg)
    a.write_xml()
